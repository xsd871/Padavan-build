#修改TNAME: K2P 中的K2P为你需要编译的型号，注意名称要与configs/templates/目录下的名字相同
名字: name: Build Padavan:Build Padavan

在: 
释放；排放；发布:
类型: [类型:[已发布]]
推:
标签:
    - v* '
分支机构数量:#分支: 
# -主人# -主人
#计划:
# - cron: 0 8 * * 5
看:
类型: [类型:[已开始]]

工作:
建设:
连续运行: 运行版本:ubuntu-20.04
如果: if:github . event . repository . owner . id = = github . event . sender . id

步伐:
    - 名字: -名称:结帐
使用: 用途:动作/结帐@主
    - 名字: -名称:初始化环境
包封/包围（动词envelop的简写）:
DEBIAN_FRONTEND: DEBIAN_FRONTEND:非交互式
奔跑: |
sudo apt-get更新
sudo apt-get -y安装unzip libtool-bin curl cmake gperf gawk flex bison nano xxd fake root
cpio git python-docutils gettext automake autopoint texinfo build-essential help 2 man
pkg-config zlib 1g-dev libg MP 3-dev libmpc-dev libmpfr-dev libncurses 5-dev libltdl-dev wget
    - 名字: -名称:克隆源代码
包封/包围（动词envelop的简写）:
核心: 3.4
奔跑: |
if[$ KERNEL = " 4.4 "]；然后
git克隆深度= 1 https://github.com/MeIsReallyBa/padavan-4.4.git/opt/rt-n56u
其他
git克隆深度= 1 https://github.com/xsd871/rt-n56u.git/opt/rt-n56u
船方不负担装货费用
CD/opt/rt-n56u/tool chain-mipsel
sh dl_toolchain.sh
mkdir -p /opt/images/
    - 名字: -名称:构建固件
包封/包围（动词envelop的简写）:
TNAME: TNAME: newifi3
核心: 3.4
奔跑: |
cd /opt/rt-n56u/trunk
        if [ ! -f configs/templates/$TNAME.config ] ; then
        echo "configs/templates/$TNAME.config not found "
        exit 1
        fi
        cp -f configs/templates/$TNAME.config .config
        sed -i s/CONFIG _ FIRMWARE _ INCLUDE _ OPENSSL _ EXE = n/CONFIG _ FIRMWARE _ INCLUDE _ OPENSSL _ EXE = y/g .config
        ################################################################################################
        #因不同型号配置功能不一样，所以先把配置项删除，如果你自己要添加其他的，也要写上删除这一条，切记！！！
        ################################################################################################
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ MENTOHUST/d ' .config #删除配置项导师
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ scut client/d '/CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT/d'
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ shadow socks/d ' .config #删除配置项SS加号+
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ ss server/d ' .config #删除配置项SS服务器
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ DNS forwarder/d ' .config #删除配置项DNS转发
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ ADBYBY/d '/CONFIG_FIRMWARE_INCLUDE_ADBYBY/d'
        sed -i /CONFIG _固件_包含_FRPC/d '/CONFIG_FIRMWARE_INCLUDE_FRPC/d'
        sed -i /CONFIG _固件_包含_FRPS/d '/CONFIG_FIRMWARE_INCLUDE_FRPS/d'
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ TUNSAFE/d '/CONFIG_FIRMWARE_INCLUDE_TUNSAFE/d'
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ alid DNS/d '/CONFIG_FIRMWARE_INCLUDE_ALIDDNS/d'
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ s relay/d '/CONFIG_FIRMWARE_INCLUDE_SRELAY/d'
        sed -i s/CONFIG _ FIRMWARE _ INCLUDE _ OPENSSL _ EXE = n/CONFIG _ FIRMWARE _ INCLUDE _ OPENSSL _ EXE = y/g .config
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ napt 66/d ' .config
        sed -i /CONFIG _ FIRMWARE _ INCLUDE _ VLMCSD/d 。配置
sed-I /CONFIG _固件_包含_ TTYD/d '。配置
sed-I /CONFIG _固件_包含_ SFE/d '。配置
sed-I /CONFIG _ FIRMWARE _ INCLUDE _ smbd 36/d。配置
sed-I /CONFIG _ FIRMWARE _ INCLUDE _ NANO/d。配置
sed-I /CONFIG _ FIRMWARE _ INCLUDE _ SOCAT/d '。配置
sed-I /CONFIG _固件_包含_ DDNS _ SSL/d '/CONFIG _ FIRMWARE _ INCLUDE _ DDNS _ SSL/d '
        sed -i '/CONFIG_FIRMWARE_INCLUDE_XUPNPD/d' .config
        sed -i '/CONFIG_FIRMWARE_INCLUDE_FFMPEG_NEW/d' .config   
        sed -i '/CONFIG_FIRMWARE_INCLUDE_SMARTDNS/d' .config
        ######################################################################
        #以下选项是定义你需要的功能（y=集成,n=忽略），重新写入到.config文件
        ######################################################################
        if [ $KERNEL = "4.4" ] ; then
        echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> .config #SS plus+
        echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs混淆插件
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
        echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #可以不集成
        echo "CONFIG_FIRMWARE_INCLUDE_XRAY=n" >> .config #集成xray执行文件  ~4.5M
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config #集成v2ray执行文件
        echo "CONFIG_FIRMWARE_INCLUDE_DDNSTO=n" >> .config #ddnsto  ~0.5M
        echo "CONFIG_FIRMWARE_INCLUDE_ALDRIVER=n" >> .config  #阿里云盘  ~3m
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #aliddns
        else
        echo "CONFIG_FIRMWARE_INCLUDE_MENTOHUST=n" >> .config #MENTOHUST
        echo "CONFIG_FIRMWARE_INCLUDE_SCUTCLIENT=n" >> .config #SCUTCLIENT
        echo "CONFIG_FIRMWARE_INCLUDE_SHADOWSOCKS=n" >> .config #SS plus+
        echo "CONFIG_FIRMWARE_INCLUDE_SSOBFS=n" >> .config # simple-obfs混淆插件
        echo "CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config #SS server"CONFIG_FIRMWARE_INCLUDE_SSSERVER=n" >> .config #SS server
        echo "CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER"CONFIG_FIRMWARE_INCLUDE_DNSFORWARDER=n" >> .config #DNSFORWARDER
        echo "CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+"CONFIG_FIRMWARE_INCLUDE_ADBYBY=n" >> .config #adbyby plus+
        echo "CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config #内网穿透FRPC"CONFIG_FIRMWARE_INCLUDE_FRPC=n" >> .config #内网穿透FRPC
        echo "CONFIG_FIRMWARE_INCLUDE_FRPS=n" >> .config #内网穿透FRPS"CONFIG_FIRMWARE_INCLUDE_FRPS=n" >> .config #内网穿透FRPS
        echo "CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config #TUNSAFE"CONFIG_FIRMWARE_INCLUDE_TUNSAFE=n" >> .config #TUNSAFE
        echo "CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #阿里DDNS"CONFIG_FIRMWARE_INCLUDE_ALIDDNS=n" >> .config #阿里DDNS
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNS=n" >> .config #smartdns"CONFIG_FIRMWARE_INCLUDE_SMARTDNS=n" >> .config #smartdns
        echo "CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=n" >> .config #smartdns二进制文件"CONFIG_FIRMWARE_INCLUDE_SMARTDNSBIN=n" >> .config #smartdns二进制文件
        echo "CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config #集成v2ray执行文件（3.8M左右)，如果不集成，会从网上下载下来执行，不影响正常使用"CONFIG_FIRMWARE_INCLUDE_V2RAY=n" >> .config #集成v2ray执行文件（3.8M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config #集成trojan执行文件(1.1M左右)，如果不集成，会从网上下载下来执行，不影响正常使用"CONFIG_FIRMWARE_INCLUDE_TROJAN=n" >> .config #集成trojan执行文件(1.1M左右)，如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config #KP广告过滤"CONFIG_FIRMWARE_INCLUDE_KOOLPROXY=n" >> .config #KP广告过滤
        echo "CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #在线文件管理服务"CONFIG_FIRMWARE_INCLUDE_CADDY=n" >> .config #在线文件管理服务
        echo "CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #集成caddu执行文件，此文件有13M,请注意固件大小。如果不集成，会从网上下载下来执行，不影响正常使用"CONFIG_FIRMWARE_INCLUDE_CADDYBIN=n" >> .config #集成caddu执行文件，此文件有13M,请注意固件大小。如果不集成，会从网上下载下来执行，不影响正常使用
        echo "CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> .config"CONFIG_FIRMWARE_INCLUDE_ADGUARDHOME=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #可以不集成"CONFIG_FIRMWARE_INCLUDE_SRELAY=n" >> .config #可以不集成
        echo "CONFIG_FIRMWARE_INCLUDE_WYY=n" >> .config #网易云解锁"CONFIG_FIRMWARE_INCLUDE_WYY=n" >> .config #网易云解锁
        echo "CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> .config #网易云解锁GO版本执行文件（4M多）注意固件超大小,不集成会自动下载"CONFIG_FIRMWARE_INCLUDE_WYYBIN=n" >> .config #网易云解锁GO版本执行文件（4M多）注意固件超大小,不集成会自动下载
        echo "CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M"CONFIG_FIRMWARE_INCLUDE_ZEROTIER=n" >> .config #zerotier ~1.3M
        echo "CONFIG_FIRMWARE_INCLUDE_NAPT66=n" >> .config"CONFIG_FIRMWARE_INCLUDE_NAPT66=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_VLMCSD=n" >> .config"CONFIG_FIRMWARE_INCLUDE_VLMCSD=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_TTYD=n" >> .config"CONFIG_FIRMWARE_INCLUDE_TTYD=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SFE=y" >> .config"CONFIG_FIRMWARE_INCLUDE_SFE=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SMBD36=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SMBD36=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_NANO=n" >> .config"CONFIG_FIRMWARE_INCLUDE_NANO=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOCAT=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SOCAT=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_DDNS_SSL=n" >> .config"CONFIG_FIRMWARE_INCLUDE_DDNS_SSL=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_XUPNPD=n" >> .config"CONFIG_FIRMWARE_INCLUDE_XUPNPD=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_FFMPEG_NEW=n" >> .config"CONFIG_FIRMWARE_INCLUDE_FFMPEG_NEW=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_EAP_PEAP=n" >> .config"CONFIG_FIRMWARE_INCLUDE_EAP_PEAP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_MINIEAP=n" >> .config"CONFIG_FIRMWARE_INCLUDE_MINIEAP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_TCPDUMP=n" >> .config"CONFIG_FIRMWARE_INCLUDE_TCPDUMP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_MTR=n" >> .config"CONFIG_FIRMWARE_INCLUDE_MTR=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_HTOP=n" >> .config"CONFIG_FIRMWARE_INCLUDE_HTOP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_DROPBEAR=n" >> .config"CONFIG_FIRMWARE_INCLUDE_DROPBEAR=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSH=y" >> .config"CONFIG_FIRMWARE_INCLUDE_OPENSSH=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EC=n" >> .config"CONFIG_FIRMWARE_INCLUDE_OPENSSL_EC=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n" >> .config"CONFIG_FIRMWARE_INCLUDE_OPENSSL_EXE=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_OPENVPN=n" >> .config"CONFIG_FIRMWARE_INCLUDE_OPENVPN=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_SERVER=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CLIENT=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SOFTETHERVPN_CMD=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_SFTP=n" >> .config"CONFIG_FIRMWARE_INCLUDE_SFTP=n" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_CURL=n" >> .config"CONFIG_FIRMWARE_INCLUDE_CURL=n" >> .config
        #echo "CONFIG_FIRMWARE_ENABLE_IPV6=n" >> .config#echo "CONFIG_FIRMWARE_ENABLE_IPV6=n" >> .config
        #echo "CONFIG_FIRMWARE_INCLUDE_IPERF3=n" >> .config#echo "CONFIG_FIRMWARE_INCLUDE_IPERF3=n" >> .config
        #echo "CONFIG_FIRMWARE_INCLUDE_IPSET=n" >> .config #echo "CONFIG_FIRMWARE_INCLUDE_IPSET=n" >> .config 
        echo "CONFIG_FIRMWARE_INCLUDE_QOS=y" >> .config"CONFIG_FIRMWARE_INCLUDE_QOS=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_IMQ=y" >> .config"CONFIG_FIRMWARE_INCLUDE_IMQ=y" >> .config
        echo "CONFIG_FIRMWARE_INCLUDE_IFB=y" >> .config"CONFIG_FIRMWARE_INCLUDE_IFB=y" >> .config
        echo "CONFIG_FIRMWARE_WEBUI_HIDE_VPN =n" >> .config"CONFIG_FIRMWARE_WEBUI_HIDE_VPN =n" >> .config
        fi
        #########################################################################################
        #自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可#自定义添加其它功能请参考源码configs/templates/目录下的config文件。按照上面的格式添加即可
        #格式如下：
        #sed -i '/自定义项/d' .config#sed -i '/自定义项/d' .config
        #echo "自定义项=y" >> .config#echo "自定义项=y" >> .config
        #########################################################################################
        sudo ./clear_tree
        sudo ./build_firmware_modify $TNAME 0
        sudo mv -f images/*.trx /opt/images/
    - name : Upload packages
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: Padavan-packages
        path: /opt/images
